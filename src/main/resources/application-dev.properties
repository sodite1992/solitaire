server.port=8080
server.context-path=/

# \u8BBE\u7F6E\u9879\u76EE\u7F16\u7801
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8

# Mapper\u914D\u7F6E
mapper.Mapper=tk.mybatis.mapper.common.Mapper
mapper.notEmpty=true
# mybatis\u914D\u7F6E
mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.mapper-locations=classpath:com/wkgao/solitaire/mvc/mapper/*.xml
mybatis.type-aliases-package=com.wkgao.solitaire.mvc.entity

# mysql\u914D\u7F6E
spring.datasource.url=jdbc:mysql://localhost:3306/solitaire?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# thymeleaf\u6A21\u677F\u914D\u7F6E
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.mode=HTML5

# pagehelper\u5206\u9875\u914D\u7F6E
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F
spring.datasource.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.filters=stat,wall,log4j2
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.useGlobalDataSourceStat=true

# redis\u914D\u7F6E
spring.redis.host=127.0.0.1
spring.redis.port=6380
spring.redis.password=
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=3000
# Redis\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u670916\u4E2A\u5206\u7247\uFF0C\u8FD9\u91CC\u914D\u7F6E\u5177\u4F53\u4F7F\u7528\u7684\u5206\u7247\uFF0C\u9ED8\u8BA4\u662F0
spring.redis.database=0
# \u8FDE\u63A5\u6C60\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 8
spring.redis.jedis.pool.max-active=8
# \u8FDE\u63A5\u6C60\u6700\u5927\u963B\u585E\u7B49\u5F85\u65F6\u95F4\uFF08\u4F7F\u7528\u8D1F\u503C\u8868\u793A\u6CA1\u6709\u9650\u5236\uFF09 \u9ED8\u8BA4 -1
spring.redis.jedis.pool.max-wait=-1
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 8
spring.redis.jedis.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5 \u9ED8\u8BA4 0
spring.redis.jedis.pool.min-idle=0

# \u6587\u4EF6\u4E0A\u4F20\u914D\u7F6E   \u9ED8\u8BA4\u652F\u6301
spring.http.multipart.enabled=true
# \u652F\u6301\u6587\u4EF6\u5199\u5165\u78C1\u76D8.
spring.http.multipart.file-size-threshold=0
# \u4E0A\u4F20\u6587\u4EF6\u7684\u76EE\u5F55
spring.http.multipart.location=
# \u6700\u5927\u652F\u6301\u6587\u4EF6\u5927\u5C0F
spring.http.multipart.max-file-size=1000Mb
# \u6700\u5927\u652F\u6301\u8BF7\u6C42\u5927\u5C0F
spring.http.multipart.max-request-size=10000Mb

file.upload.path=E\:/home/cdn/uploadfiles/
file.upload.suffix=
img.upload.suffix=.BMP/.JPG/.JPEG/.PNG/.GIF
video.upload.suffix=.avi/.wmv/.mpeg/.mp4/.mov/.mkv/.flv/.f4v/.m4v/.rmvb/.rm/.3gp/.dat/.ts/.mts/.vob

# \u5B9A\u65F6\u4EFB\u52A1\u914D\u7F6E
spring.quartz.properties.org.quartz.scheduler.instanceName=clusteredScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000
spring.quartz.properties.org.quartz.jobStore.useProperties=false
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=10
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
# \u6570\u636E\u5E93\u65B9\u5F0F memory jdbc
spring.quartz.job-store-type=jdbc
# \u521D\u59CB\u5316\u8868\u7ED3\u6784
spring.quartz.jdbc.initialize-schema=always
# \u521D\u59CB\u5316\u811A\u672C
spring.quartz.jdbc.schema=classpath:schema/tables_mysql_innodb.sql





















